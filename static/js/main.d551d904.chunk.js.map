{"version":3,"sources":["reducers/authReducer.js","actions/types/types.js","actions/auth.context.js","helpers/tokenValid.js","hooks/useInput.js","components/Nav/NavigationBar.js","HOC/PrivateRoute.js","components/Layout/Header.js","reducers/usersReducer.js","actions/variables/api.js","actions/users.context.js","components/Layout/Loading.js","components/Layout/GridContainer.js","components/Layout/CardContainer.js","components/Users/UserCard.js","components/Layout/Error.js","components/Users/Users.js","pages/Homepage.js","components/Forms/LoginForm.js","pages/Login.js","components/Forms/RegisterForm.js","pages/Register.js","reducers/postsReducer.js","actions/posts.context.js","hooks/useToggle.js","helpers/lockModal.js","components/Modals/DeleteModal.js","components/Layout/ActionsDropdown.js","components/Modals/EditPostModal.js","components/Posts/PostsCard.js","components/Posts/Posts.js","pages/UserPosts.js","components/Layout/CenteredDiv.js","components/Posts/PostContent.js","reducers/commentsReducer.js","actions/comments.context.js","components/Modals/EditComment.js","components/Comments/CommentCard.js","components/Modals/AddCommentModal.js","components/Comments/Comments.js","pages/Post.js","components/Users/UserSettings.js","components/Modals/AddPostModal.js","pages/AccountSettings.js","pages/ErrorPage.js","routes/Routes.js","helpers/ScrollToTop.js","App.js","serviceWorker.js","index.js","styles/Users/user_card.module.scss","styles/Comments/comment.module.scss","styles/Posts/posts_card.module.scss","styles/Posts/post_content.module.scss","styles/Comments/comments.module.scss","styles/Layout/header.module.scss","styles/Layout/grid_container.module.scss","styles/Layout/card_container.module.scss","styles/Layout/centered_div.module.scss"],"names":["reducer","state","action","type","localStorage","setItem","payload","username","loadingAuth","loggedInUser","isAuthenticated","authMsg","removeItem","getItem","AuthContext","createContext","AuthActions","AuthProvider","props","initialState","useReducer","authReducer","dispatch","actions","login","user","accountData","map","users","password","checkAuth","useCallback","logout","clearAuthMsg","Provider","value","children","useInput","init","useState","setState","e","target","name","prev","withRouter","useContext","search","handleChange","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","Divider","onClick","preventDefault","Form","inline","onSubmit","history","push","searchParam","Control","onChange","placeholder","size","Button","Link","PrivateRoute","Component","component","rest","render","Header","styles","header","loadingUsers","usersMsg","usersError","currentUsername","loadingUser","BASE_API_URL","UsersContext","UsersActions","UsersProvider","usersReducer","getUsers","a","axios","get","result","data","getCurrentUser","userID","clearUser","clearUsers","resetError","Loading","isLoading","style","display","flexDirection","justifyContent","alignItems","padding","color","height","width","GridContainer","grid_container","CardContainer","card_container","UserCard","phone","email","suite","street","city","zipcode","website","company","user_card__details","user_card__avatar","user_card__name","user_card__username","user_card__website","user_card__company","user_card__address","user_card__contact","user_card__email","user_card__phone","user_card__controls","Error","reset","error","message","useEffect","Alert","show","Users","key","address","Index","LoginForm","location","Container","Jumbotron","Row","Col","Group","controlId","Label","required","Login","RegisterForm","minLength","Register","loading","userPosts","postsMsg","postsError","post","inProgress","filter","PostsContext","PostsActions","PostsProvider","postsReducer","getUserPosts","GET_POSTS_FAILED","getPost","postID","addPost","editPost","put","deletePost","delete","clearPost","clearUserPosts","postActionProgress","useToggle","lockModal","DeleteModal","deleteFunction","onHide","progressFunction","Modal","centered","closeButton","Title","Body","toLowerCase","Footer","disabled","ActionsDropdown","editOnClick","deleteOnClick","Dropdown","Menu","EditPost","body","htmlFor","PostsCard","deleteModal","toggleDeleteModal","editModal","toggleEditModal","posts_card__title","posts_card__body","posts_card__controls","Posts","UserPosts","match","params","CenteredDiv","centered_div","PostContent","post_content","post_content__title","post_content__body","comments","commentsMsg","commentsError","comment","CommentsContext","CommentsActions","CommentsProvider","commentsReducer","CommentsMsg","getComments","addComment","editComment","commentID","deleteComment","clearComments","commentActionProgress","EditComment","Comment","comment__email","comment__name","comment__body","comment__controls","AddComment","newComment","Comments","addModal","toggleAddModal","comments__header","length","CommentCard","Post","UserSettings","Accordion","Card","eventKey","NewPost","AccountSettings","addPostModal","toggleAddPostModal","ErrorPage","Routes","exact","path","Homepage","ScrollToTop","pathname","useLocation","window","scrollTo","App","Boolean","hostname","ReactDOM","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.d551d904.chunk.js","sourcesContent":["import { LOGIN_SUCCESS, LOGIN_FAILED, AUTH_SUCCESS, AUTH_FAILED, LOGOUT, CLEAR_AUTH } from '../actions/types/types';\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('pretend-json-token', '0000');\r\n\t\t\tlocalStorage.setItem('user', action.payload.username);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingAuth: false,\r\n\t\t\t\tloggedInUser: action.payload.username,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tauthMsg: null\r\n\t\t\t};\r\n\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\tlocalStorage.removeItem('pretend-json-token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingAuth: false,\r\n\t\t\t\tloggedInUser: '',\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tauthMsg: 'Error logging in. Please check the credentials you entered were correct'\r\n\t\t\t};\r\n\r\n\t\tcase AUTH_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingAuth: false,\r\n\t\t\t\tloggedInUser: localStorage.getItem('user'),\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tauthMsg: null\r\n\t\t\t};\r\n\r\n\t\tcase AUTH_FAILED:\r\n\t\t\tlocalStorage.removeItem('pretend-json-token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingAuth: false,\r\n\t\t\t\tloggedInUser: '',\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tauthMsg: null\r\n\t\t\t};\r\n\r\n\t\tcase LOGOUT:\r\n\t\t\tlocalStorage.removeItem('pretend-json-token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingAuth: false,\r\n\t\t\t\tloggedInUser: '',\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tauthMsg: \"Successfully logged out\"\r\n\t\t\t};\r\n\r\n\t\tcase CLEAR_AUTH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthMsg: null\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","export const GET_USERS = \"GET_USERS\"\r\nexport const GET_USERS_FAILED = \"GET_USERS\"\r\nexport const GET_POSTS = \"GET_POSTS\"\r\nexport const GET_POSTS_FAILED = \"GET_POSTS_FAILED\"\r\nexport const GET_USER_POSTS = \"GET_USER_POSTS\"\r\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\"\r\nexport const GET_CURRENT_USER_FAILED = \"GET_CURRENT_USER_FAILED\"\r\nexport const GET_POST = \"GET_POST\"\r\nexport const GET_POST_FAILED = \"GET_POST_FAILED\"\r\nexport const GET_COMMENTS = \"GET_COMMENTS\"\r\nexport const GET_COMMENTS_FAILED = \"GET_COMMENTS_FAILED\"\r\n\r\nexport const ADD_COMMENT = \"ADD_COMMENT\"\r\nexport const ADD_COMMENT_FAILED = \"ADD_COMMENT_FAILED\"\r\nexport const ADD_POST = \"ADD_POST\"\r\nexport const ADD_POST_FAILED = \"ADD_POST_FAILED\"\r\n\r\nexport const EDIT_POST = \"EDIT_POST\"\r\nexport const EDIT_POST_FAILED = \"EDIT_POST_FAILED\"\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT \"\r\nexport const EDIT_COMMENT_FAILED = \"EDIT_COMMENT_FAILED\"\r\n\r\nexport const DELETE_POST = \"DELETE_POST\"\r\nexport const DELETE_POST_FAILED = \"DELETE_POST_FAILED\"\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"\r\nexport const DELETE_COMMENT_FAILED = \"DELETE_COMMENT_FAILED\"\r\n\r\n//these clear actions could be condensed and re-used, however for explicit\r\n//reasons I decided to make seperate variables for each clear action\r\nexport const CLEAR_POST = \"CLEAR_POST\"\r\nexport const CLEAR_USERS_POSTS = \"CLEAR_USERS_POSTS\"\r\nexport const CLEAR_COMMENTS = \"CLEAR_COMMENTS\"\r\nexport const CLEAR_CURRENT_USER = \"CLEAR_CURRENT_USER\"\r\nexport const CLEAR_AUTH = \"CLEAR_AUTH\"\r\n\r\nexport const LOADING_POSTS = \"LOADING_POSTS\"\r\nexport const LOADING_COMMENTS = \"LOADING_COMMENTS\"\r\nexport const LOADING_POST = \"LOADING_POST\"\r\n \r\nexport const LOGIN_SUCCESS = \"LOGIN\"\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\"\r\nexport const AUTH_SUCCESS = \"CHECK_AUTH\"\r\nexport const AUTH_FAILED = \"CHECK_AUTH_FAILED\"\r\nexport const LOGOUT = \"LOGOUT\"\r\n\r\nexport const CLEAR_USER = \"CLEAR_USER\"\r\nexport const CLEAR_USERS = \"CLEAR_USERS\"\r\n\r\nexport const ACTION_PROGRESS = \"COMMENT_ACTION_PROGRESS\"\r\n\r\nexport const RESET_ERROR = \"CLEAR_MESSAGE\"","import React, { createContext, useReducer, useCallback } from 'react';\r\nimport accountData from '../placeholder_data/users.json';\r\nimport authReducer from '../reducers/authReducer';\r\nimport tokenValid from '../helpers/tokenValid';\r\nimport { LOGIN_SUCCESS, LOGIN_FAILED, AUTH_SUCCESS, AUTH_FAILED, LOGOUT, CLEAR_AUTH } from './types/types';\r\n\r\nexport const AuthContext = createContext();\r\nexport const AuthActions = createContext();\r\n\r\nexport const AuthProvider = (props) => {\r\n\t//is Authenticated uses the return value from the \"tokenValid\" helper function.\r\n\t//this would usually be validated against the server to see if the token has expired or not\r\n\tconst initialState = {\r\n\t\tloadingAuth: false,\r\n\t\tisAuthenticated: tokenValid(),\r\n\t\tloggedInUser: '',\r\n\t\tauthMsg: null\r\n\t};\r\n\r\n\t//useReducer hook used with auth reducer and initial state\r\n\tconst [ state, dispatch ] = useReducer(authReducer, initialState);\r\n\r\n\t/**\r\n     * auth state is a bit different, as it's pulling data from a local json file.\r\n     * @login maps through the json file and checks if the @param user matches the json\r\n     * data. if so, LOGIN will add a fake JSON token with the value \"0000\" to localStorage,\r\n     * and sets the @loggedInUser to the username and @isAuthenticated to true, which\r\n     * can then be used to check against authentication throughout the app.\r\n     * if credentials do not match, it will set the state accordingly and will add\r\n     * an error message to @authMsg\r\n     * \r\n     * @checkAuth cheats a little here, as obviously there is no way to validate a user\r\n     * from the server. instead, it looks to see if the \"pretend-json-token\" in localStorage\r\n     * is set to \"0000\", which is the only valid token for this app. If true, it will\r\n     * set the @loggedInUser from localStorage, otherwise if false, it will wipe localStorage\r\n     * and reset state values. Obviously any user could simply\r\n     * add this value to localStorage and the authentication will work but in a real world example\r\n     * it would first check if the token is valid through a helper function, \r\n     * and give an appropriate response to that, instead of \"0000\" being the only valid token.\r\n     */\r\n\r\n\t//actions functions\r\n\r\n\t//log in user\r\n\tconst login = (user) => {\r\n\t\taccountData.map((users) => {\r\n\t\t\tif (users.username === user.username && users.password === user.password) {\r\n\t\t\t\treturn dispatch({\r\n\t\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\t\tpayload: user\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn dispatch({\r\n\t\t\t\t\ttype: LOGIN_FAILED\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t//check if user authenticated\r\n\tconst checkAuth = useCallback(() => {\r\n\t\tif (localStorage.getItem('pretend-json-token') === '0000') {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_SUCCESS\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t}, []);\r\n\r\n\t//logout user\r\n\tconst logout = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGOUT\r\n\t\t});\r\n\t};\r\n\r\n\tconst clearAuthMsg = useCallback(() => {\r\n\t\tdispatch({ type: CLEAR_AUTH });\r\n\t}, []);\r\n\r\n\t//list of actions to use provider\r\n\tconst actions = {\r\n\t\tlogin,\r\n\t\tcheckAuth,\r\n\t\tlogout,\r\n\t\tclearAuthMsg\r\n\t};\r\n\r\n\t//return providers\r\n\treturn (\r\n\t\t<AuthContext.Provider value={state}>\r\n\t\t\t<AuthActions.Provider value={actions}>{props.children}</AuthActions.Provider>\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n","export default () => {\r\n    if(localStorage.getItem('pretend-json-token') === \"0000\") {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n/**\r\n * pretend helper function to check if web token is valid or not.\r\n * usually sets x-auth-token which would then go the server, in which\r\n * the server would run a check to see if the token is valid or not.\r\n * if the token is valid, the user will stay logged in, else their\r\n * session will expire.\r\n * \r\n * Used in this instance for @isAuthenticated in the global state. It\r\n * simply reads the return value based on if the token is valid, in this\r\n * app for demonstration purposes, the only token that is valid is \"000\"\r\n */","import {useState} from 'react';\r\n\r\n//hook for controlling inputs. can have any initial state\r\n//which is helpful when editing content within the app\r\nconst useInput = (init) => {\r\n    const [state, setState] = useState(init);\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        setState((prev) => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const resetState = () => {\r\n        setState(init);\r\n    }\r\n\r\n    return [state, handleChange, resetState]\r\n}\r\n\r\nexport default useInput;","import React, { useContext } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown, Button, Form } from 'react-bootstrap';\r\nimport { AuthActions, AuthContext } from '../../actions/auth.context';\r\nimport useInput from '../../hooks/useInput';\r\n\r\n//bootstrapped navbar. conditionally shows different information.\r\n//if user not signed, show login and register links, else show\r\n//users dropdown controls\r\nconst NavigationBar = (props) => {\r\n\t//state and actions from context\r\n\tconst { isAuthenticated, loggedInUser } = useContext(AuthContext);\r\n\tconst { logout } = useContext(AuthActions);\r\n\tconst [search, handleChange] = useInput(\"\");\r\n\r\n\t//logs the user out\r\n\tconst handleLogout = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlogout();\r\n\t};\r\n\t\r\n\t//very simple search function allowing the user to search for a post id\r\n\tconst handleSearch = (e) => {\r\n\t\te.preventDefault();\r\n\t\tprops.history.push(`/posts/${search.searchParam}`)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n\t\t\t<Navbar.Brand as={NavLink} to=\"/\">Natural HR React Task</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse id=\"navbar\">\r\n\t\t\t\t{isAuthenticated ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<NavDropdown className=\"mr-auto\" title={loggedInUser} id=\"collasible-nav-dropdown\">\r\n\t\t\t\t\t\t\t<NavDropdown.Item as={NavLink} to=\"/users/myaccount\">My Account</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Divider />\r\n\t\t\t\t\t\t\t<NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\r\n\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t<Form inline onSubmit={handleSearch}>\r\n\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"searchParam\" value={search.searchParam || \"\"} onChange={handleChange} placeholder=\"Search Posts ID\" size=\"sm\" className=\"mr-sm-2\" />\r\n\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"outline-light\" size=\"sm\">\r\n\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Nav className=\"ml-auto\">\r\n\t\t\t\t\t\t<Nav.Link as={NavLink} to=\"/login\">Login</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link as={NavLink} to=\"/register\">Register</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t)}\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../actions/auth.context';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n//a private route HOC to be added to pages that need authentication.\r\n//checks if isAuthenticated from global state is true, if so, return the page, else\r\n//redirect to the login page.\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\tconst { isAuthenticated } = useContext(AuthContext);\r\n\r\n\treturn (\r\n\t\t<Route {...rest} render={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />)} />\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport styles from '../../styles/Layout/header.module.scss';\r\n\r\n//basic header component used on various pages on the app.\r\n//uses props to display a page title\r\nconst Header = ({title}) => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <h5>{title}</h5>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n\tGET_USERS,\r\n\tCLEAR_USERS,\r\n\tCLEAR_USER,\r\n\tGET_USERS_FAILED,\r\n\tGET_CURRENT_USER,\r\n\tGET_CURRENT_USER_FAILED,\r\n\tRESET_ERROR\r\n} from '../actions/types/types';\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.payload,\r\n\t\t\t\tloadingUsers: false,\r\n\t\t\t\tusersMsg: null,\r\n\t\t\t\tusersError: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_USERS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: [],\r\n\t\t\t\tloadingUsers: false,\r\n\t\t\t\tusersMsg: 'Error occured trying to find users',\r\n\t\t\t\tusersError: true\r\n\t\t\t};\r\n\r\n\t\t//gets username for current users page that views their posts. uses array value 0\r\n\t\t//can then easily be used within the app without mapping the value\r\n\t\tcase GET_CURRENT_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUsername: action.payload.username,\r\n\t\t\t\tloadingUser: false,\r\n\t\t\t\tusersMsg: null,\r\n\t\t\t\tusersError: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_CURRENT_USER_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUsername: null,\r\n\t\t\t\tloadingUser: false,\r\n\t\t\t\tusersMsg: 'Error occured trying to find this user',\r\n\t\t\t\tusersError: true\r\n\t\t\t};\r\n\r\n\t\t//user and usersPost will never clash, so on clear, both loadingUser and loadingUsers can\r\n\t\t//be cleared together\r\n\t\tcase CLEAR_USERS:\r\n\t\tcase CLEAR_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingUser: true,\r\n\t\t\t\tloadingUsers: true,\r\n\t\t\t\tusersMsg: null,\r\n\t\t\t\tusersError: false,\r\n\t\t\t\tcurrentUsername: null\r\n\t\t\t};\r\n\t\t\r\n\t\tcase RESET_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusersError: false\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","export const BASE_API_URL = \"https://jsonplaceholder.typicode.com/\"","import React, { createContext, useReducer, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n\tGET_USERS,\r\n\tCLEAR_USERS,\r\n\tCLEAR_USER,\r\n\tGET_USERS_FAILED,\r\n\tGET_CURRENT_USER,\r\n\tGET_CURRENT_USER_FAILED,\r\n\tRESET_ERROR\r\n} from './types/types';\r\nimport usersReducer from '../reducers/usersReducer';\r\nimport {BASE_API_URL} from './variables/api'\r\n\r\n//create new seperate contexts for actions and state\r\nexport const UsersContext = createContext();\r\nexport const UsersActions = createContext();\r\n\r\n//export provider\r\nexport const UsersProvider = (props) => {\r\n\t//initial state\r\n\tconst initialState = {\r\n\t\tusers: [],\r\n\t\tcurrentUsername: null,\r\n\t\tloadingUsers: true,\r\n\t\tloadingUser: true,\r\n\t\tusersMsg: '',\r\n\t\tusersError: false\r\n\t};\r\n\r\n\t//setup userReducer hook using usersReducer and the initial state declared above\r\n\tconst [ state, dispatch ] = useReducer(usersReducer, initialState);\r\n\t\r\n\t//action functions\r\n\t//gets all users\r\n\tconst getUsers = useCallback(\r\n\t\tasync () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst result = await axios.get(`${BASE_API_URL}users`);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: GET_USERS,\r\n\t\t\t\t\tpayload: result.data\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: GET_USERS_FAILED\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\t\r\n\t//gets current user\r\n\tconst getCurrentUser = useCallback(async(userID) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(`${BASE_API_URL}users/${userID}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_CURRENT_USER,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_CURRENT_USER_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t},[])\r\n\r\n\t//clear user state\r\n\tconst clearUser = useCallback(() => {\r\n\t\tdispatch({\r\n\t\t\ttype: CLEAR_USER\r\n\t\t});\r\n\t},[])\r\n\r\n\t//clear users state\r\n\tconst clearUsers = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: CLEAR_USERS\r\n\t\t});\r\n\t};\r\n\r\n\t//reset inprogress boolean\r\n\tconst resetError = useCallback(() => {\r\n\t\tdispatch({type: RESET_ERROR})\r\n\t},[])\r\n\t\r\n\t//store all actions here and add to the value in the provider\r\n\tconst actions = {\r\n\t\tgetUsers,\r\n\t\tgetCurrentUser,\r\n\t\tclearUser,\r\n\t\tclearUsers,\r\n\t\tresetError\r\n\t};\r\n\r\n\t//return providers that will wrap around the App component and allow children access to context\r\n\treturn (\r\n\t\t<UsersContext.Provider value={state}>\r\n\t\t\t<UsersActions.Provider value={actions}>{props.children}</UsersActions.Provider>\r\n\t\t</UsersContext.Provider>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\n//simple loading component that can be used across the app.\r\n//check is props.isLoading is true, if so, displays the loading\r\n//indicator. This could also be a HOC to dry up the code more instead\r\n//of adding it into each component it needs, however, I feel it works\r\n//well enough for the app.\r\n\r\n//this component could also use props.children, and render the loading indicator\r\n//or component when this component is wrapped around another component as a container.\r\n\r\nconst Loading = ({ title, isLoading }) => {\r\n\treturn (\r\n\t\tisLoading && (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tpadding: '1.5em'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<p>{title}</p>\r\n\t\t\t\t<ReactLoading type=\"bars\" color=\"gray\" height=\"5%\" width=\"5%\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport styles from '../../styles/Layout/grid_container.module.scss';\r\n\r\n//grid container with automatic responsiveness using auto-fit and minmax() in css\r\nconst GridContainer = (props) => {\r\n    return (\r\n        <div className={styles.grid_container}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridContainer;\r\n","import React from 'react';\r\nimport styles from '../../styles/Layout/card_container.module.scss';\r\n\r\n//default container for card style. Used in various components\r\nconst CardContainer = (props) => {\r\n\treturn <div className={styles.card_container}>{props.children}</div>;\r\n};\r\n\r\nexport default CardContainer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport CardContainer from '../Layout/CardContainer';\r\nimport styles from '../../styles/Users/user_card.module.scss';\r\n\r\n//simple card view for displaying a user.\r\nconst UserCard = (props) => {\r\n\t//destructure props to make the JSX more readable\r\n\tconst {id, phone, email, suite, street, city, zipcode, name, username, website, company} = props;\r\n\treturn (\r\n\t\t<CardContainer>\r\n\t\t\t<div className={styles.user_card__details}>\r\n\t\t\t\t<div className={styles.user_card__avatar}>\r\n\t\t\t\t\t<i className=\"fas fa-user\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h5 className={styles.user_card__name}>{name}</h5>\r\n\t\t\t\t<p className={styles.user_card__username}>username: {username}</p>\r\n\t\t\t\t<p className={styles.user_card__website}>website: {website}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p className={styles.user_card__company}>Company: {company}</p>\r\n\r\n\t\t\t<div className={styles.user_card__address}>\r\n\t\t\t\t<p>Address</p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Street: {street}</li>\r\n\t\t\t\t\t<li>suite: {suite}</li>\r\n\t\t\t\t\t<li>city: {city}</li>\r\n\t\t\t\t\t<li>zipcode: {zipcode}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.user_card__contact}>\r\n\t\t\t\t<p className={styles.user_card__email}>{email}</p>\r\n\t\t\t\t<p className={styles.user_card__phone}>Contact: {phone}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.user_card__controls}>\r\n\t\t\t\t<Link to={`/users/${id}/posts`}>\r\n\t\t\t\t\t<Button variant=\"outline-dark\" size=\"sm\">\r\n\t\t\t\t\t\t<i className=\"fas fa-comment-alt\" />\r\n\t\t\t\t\t\tPosts\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</CardContainer>\r\n\t);\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n//simple error component to display errors and remove errors.\r\n//shows based props.error boolean, and displays message from props.message.\r\n//on dismount, runs the props.reset function which resets error global state\r\n//back to false. some components may not need to reset the error,\r\n//so the reset function is optional\r\n\r\nconst Error = ({ reset, error, message }) => {\r\n\t//if reset props exists, run on on dismount\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (reset) {\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\treset();\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ reset ]\r\n\t);\r\n\t\r\n\t//if reset prop not present and message empty, return null\r\n\tif (!reset && !message) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//return the error with the message\r\n\treturn (\r\n\t\t<Alert variant=\"danger\" show={error}>\r\n\t\t\t{message}\r\n\t\t</Alert>\r\n\t);\r\n};\r\n\r\nexport default Error;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { UsersActions, UsersContext } from '../../actions/users.context';\r\nimport Loading from '../Layout/Loading';\r\nimport GridContainer from '../Layout/GridContainer';\r\nimport UserCard from './UserCard';\r\nimport Error from '../Layout/Error';\r\n\r\nconst Users = () => {\r\n\t//grabs global state\r\n\tconst { users, loadingUsers, usersError, usersMsg } = useContext(UsersContext);\r\n\tconst { getUsers, resetError } = useContext(UsersActions);\r\n\r\n\t//gets a list of users from the api\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tgetUsers();\r\n\t\t},\r\n\t\t[ getUsers ]\r\n\t);\r\n\t\r\n\t//displays a list of users using the UserCard component\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Error reset={resetError} error={usersError} message={usersMsg} />\r\n\t\t\t<Loading isLoading={loadingUsers} title=\"Loading All Users\" />\r\n\t\t\t<GridContainer>\r\n\t\t\t\t{users.map((user) => (\r\n\t\t\t\t\t<UserCard\r\n\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\tid={user.id}\r\n\t\t\t\t\t\tname={user.name}\r\n\t\t\t\t\t\tusername={user.username}\r\n\t\t\t\t\t\temail={user.email}\r\n\t\t\t\t\t\tstreet={user.address.street}\r\n\t\t\t\t\t\tsuite={user.address.suite}\r\n\t\t\t\t\t\tcity={user.address.city}\r\n\t\t\t\t\t\tzipcode={user.address.zipcode}\r\n\t\t\t\t\t\twebsite={user.website}\r\n\t\t\t\t\t\tphone={user.phone}\r\n\t\t\t\t\t\tcompany={user.company.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</GridContainer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport Header from '../components/Layout/Header';\r\nimport Users from '../components/Users/Users';\r\n\r\n//renders Users component displaying a list of users from API\r\nconst Index = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title=\"All Users\"/>\r\n\t\t\t<Users />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Index;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Form, Button, Container, Row, Col, Jumbotron } from 'react-bootstrap';\r\nimport { AuthActions, AuthContext } from '../../actions/auth.context';\r\nimport useInput from '../../hooks/useInput';\r\nimport Error from '../Layout/Error';\r\n\r\nconst LoginForm = (props) => {\r\n\tconst { location } = props;\r\n\tconst { login, clearAuthMsg } = useContext(AuthActions);\r\n\tconst { authMsg, isAuthenticated } = useContext(AuthContext);\r\n\tconst [ user, handleChange ] = useInput('');\r\n\r\n\t//login in the user\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlogin(user);\r\n\t};\r\n\r\n\t//check if user is authenticated. if isAuthenticated changes,\r\n\t// rerender component and redirect to \"/\"\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tisAuthenticated && location('/');\r\n\t\t\treturn () => {\r\n\t\t\t\tclearAuthMsg();\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ isAuthenticated, location, clearAuthMsg ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Container className=\"mt-5\">\r\n\t\t\t<Jumbotron className=\"shadow-sm bg-white rounded border border-light\">\r\n\t\t\t\t<Row className=\"d-flex justify-content-lg-center\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Error error={!isAuthenticated} message={authMsg} />\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"username\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={user.username || ''}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Username\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tvalue={user.password || ''}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Button variant=\"dark\" type=\"submit\">\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t<p className=\"mt-4\">\r\n\t\t\t\t\t\t\tDont have an account? Create one <NavLink to=\"/register\">here</NavLink>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Jumbotron>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../components/Forms/LoginForm';\r\nimport Header from '../components/Layout/Header';\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <>\r\n            <Header title=\"Log in to continue\"/>\r\n            <LoginForm location={props.history.push}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Form, Button, Container, Row, Col, Jumbotron } from 'react-bootstrap';\r\n\r\n//dummy component that doesn't actually do anything, however,\r\n//it would follow the same pattern as the rest of the app,\r\n//sending a post request to the api to create an account\r\nconst RegisterForm = (props) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\treturn (\r\n\t\t<Container className=\"mt-5\">\r\n\t\t\t<Jumbotron className=\"shadow-sm bg-white rounded border border-light\">\r\n\t\t\t\t<Row className=\"d-flex justify-content-lg-center\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"username\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n                                    placeholder=\"Enter Username\"\r\n                                    required\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n                            <Form.Group controlId=\"username\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    required\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n                                    placeholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Button variant=\"dark\" type=\"submit\">\r\n\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Jumbotron>\r\n\t\t </Container>\r\n\t);\r\n};\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport Header from '../components/Layout/Header';\r\nimport RegisterForm from '../components/Forms/RegisterForm';\r\n\r\nconst Register = () => {\r\n    return (\r\n        <div>\r\n            <Header title=\"Create A New Account\" />\r\n            <RegisterForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import {\r\n\tGET_USER_POSTS,\r\n\tGET_POSTS_FAILED,\r\n\tEDIT_POST,\r\n\tEDIT_POST_FAILED,\r\n\tADD_POST,\r\n\tADD_POST_FAILED,\r\n\tDELETE_POST,\r\n\tDELETE_POST_FAILED,\r\n\tGET_POST,\r\n\tGET_POST_FAILED,\r\n\tCLEAR_POST,\r\n\tCLEAR_USERS_POSTS,\r\n\tACTION_PROGRESS,\r\n\tRESET_ERROR\r\n} from '../actions/types/types';\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_USER_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tuserPosts: action.payload,\r\n\t\t\t\tpostsMsg: null,\r\n\t\t\t\tpostsError: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_POSTS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tuserPosts: [],\r\n\t\t\t\tpostsMsg: 'Something went wrong getting the posts',\r\n\t\t\t\tpostsError: true\r\n\t\t\t};\r\n\r\n\t\tcase GET_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tpost: action.payload,\r\n\t\t\t\tpostsMsg: null,\r\n\t\t\t\tpostsError: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_POST_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tpost: {},\r\n\t\t\t\tpostsMsg: 'Something went wrong getting this post',\r\n\t\t\t\tpostsError: true\r\n\t\t\t};\r\n\r\n\t\tcase ADD_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserPosts: [ ...state.userPosts, action.payload ],\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: \"Added post\",\r\n\t\t\t\tpostsError: false\r\n\t\t\t};\r\n\r\n\t\tcase ADD_POST_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: 'Something went wrong adding the post',\r\n\t\t\t\tpostsError: true\r\n\t\t\t};\r\n\r\n\t\tcase EDIT_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserPosts: state.userPosts.map((post) => (post.id === action.payload.id ? action.payload : post)),\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: \"Edited post successfully\",\r\n\t\t\t\tpostsError: false\r\n\t\t\t};\r\n\r\n\t\tcase EDIT_POST_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: 'Something went wrong editing the post',\r\n\t\t\t\tpostsError: true\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserPosts: state.userPosts.filter((post) => post.id !== action.payload),\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: \"Deleted post\",\r\n\t\t\t\tpostsError: false\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_POST_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: 'Something went wrong deleting the post',\r\n\t\t\t\tpostsError: true\r\n\t\t\t};\r\n\r\n\t\tcase CLEAR_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tpostsMsg: null,\r\n\t\t\t\tpostsError: false,\r\n\t\t\t\tpost: {}\r\n\t\t\t};\r\n\r\n\t\tcase CLEAR_USERS_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tloading: true,\r\n\t\t\t\tpostsError: false,\r\n\t\t\t\tuserPosts: []\r\n\t\t\t};\r\n\r\n\t\tcase RESET_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostsError: false,\r\n\t\t\t};\r\n\r\n\t\tcase ACTION_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinProgress: true\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext, useReducer, useCallback } from 'react';\r\nimport {\r\n\tGET_USER_POSTS,\r\n\tADD_POST,\r\n\tEDIT_POST,\r\n\tDELETE_POST,\r\n\tGET_POSTS_FAILED,\r\n\tGET_POST,\r\n\tGET_POST_FAILED,\r\n\tCLEAR_POST,\r\n\tCLEAR_USERS_POSTS,\r\n\tADD_POST_FAILED,\r\n\tEDIT_POST_FAILED,\r\n\tDELETE_POST_FAILED,\r\n\tACTION_PROGRESS,\r\n\tRESET_ERROR\r\n} from './types/types';\r\nimport axios from 'axios';\r\nimport postsReducer from '../reducers/postsReducer';\r\nimport { BASE_API_URL } from './variables/api';\r\n\r\n/**\r\n * Uses the context API here for global state.\r\n * has the initial global state, along with the actions, which can then be\r\n * passed into other components in the app provided they have been wrapped\r\n * with the context provider. @userPosts global state was added here instead\r\n * of the users context to keep everything to do with posts in the app in one\r\n * centralised place, however, it could easily be added in the users context\r\n */\r\n\r\n/**\r\n * @postsContext @postsActions\r\n * creates two seperate contexts using the contextAPI\r\n * postsContext will provide components with the state\r\n * postsActions will provide components with actions\r\n */\r\nexport const PostsContext = createContext();\r\nexport const PostsActions = createContext();\r\n\r\nexport const PostsProvider = (props) => {\r\n\t//set initial state\r\n\tconst initialState = {\r\n\t\tpost: {},\r\n\t\tuserPosts: [],\r\n\t\tpostsMsg: null,\r\n\t\tloading: true,\r\n\t\tinProgress: false,\r\n\t\tpostsError: false\r\n\t};\r\n\t/** usually @postsMsg could be a response from the server, however\r\n    * as the backend can't be controlled here, the message has been manually set in the reducer */\r\n\r\n\t//useReducer hook to use with imported reducer and initial state\r\n\tconst [ state, dispatch ] = useReducer(postsReducer, initialState);\r\n\r\n\t//actions functions\r\n\r\n\t//get users posts\r\n\tconst getUserPosts = useCallback(async(userID) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(`${BASE_API_URL}users/${userID}/posts`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_USER_POSTS,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\tGET_POSTS_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t},[])\r\n\r\n\r\n\t//get a specific post. can also be used with search bar to search for a post\r\n\tconst getPost = useCallback(async(postID) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(`${BASE_API_URL}posts/${postID}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_POST,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_POST_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t},[])\r\n\r\n\r\n\t// add a new post\r\n\tconst addPost = async (post) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.post(`${BASE_API_URL}posts`, post);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_POST,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_POST_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//edit a new post\r\n\tconst editPost = async (post, postID) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.put(`${BASE_API_URL}posts/${postID}`, post);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_POST,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_POST_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//delete a post\r\n\tconst deletePost = async (postID) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`${BASE_API_URL}posts/${postID}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_POST,\r\n\t\t\t\tpayload: postID\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_POST_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//clear actions for cleanup on components. resets global state, such as loading states.\r\n\tconst clearPost = useCallback(() => {\r\n\t\tdispatch({\r\n\t\t\ttype: CLEAR_POST\r\n\t\t});\r\n\t},[])\r\n\r\n\tconst clearUserPosts = useCallback(() => {\r\n\t\tdispatch({ type: CLEAR_USERS_POSTS });\r\n\t},[])\r\n\r\n\tconst postActionProgress = () => dispatch({ type: ACTION_PROGRESS });\r\n\r\n\tconst resetError = useCallback(() => {\r\n\t\tdispatch({type: RESET_ERROR})\r\n\t},[])\r\n\t\r\n\tconst actions = {\r\n\t\tgetUserPosts,\r\n\t\tgetPost,\r\n\t\tclearPost,\r\n\t\tclearUserPosts,\r\n\t\taddPost,\r\n\t\teditPost,\r\n\t\tdeletePost,\r\n\t\tpostActionProgress,\r\n\t\tresetError\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PostsContext.Provider value={state}>\r\n\t\t\t<PostsActions.Provider value={actions}>{props.children}</PostsActions.Provider>\r\n\t\t</PostsContext.Provider>\r\n\t);\r\n};\r\n","import {useState} from 'react';\r\n\r\n//simple hook for switching state between true and false\r\nconst useToggle = init => {\r\n    const [state, setState] = useState(init);\r\n    const toggle = () => {\r\n        setState(!state);\r\n    }\r\n\r\n    return [state, toggle];\r\n}\r\n\r\nexport default useToggle","//small workaround function for react-bootstrap modals\r\n//onHide props has to be a function. This function\r\n//is used to lock the modal whilst an action is in progress\r\nconst lockModal = () => {\r\n\treturn false\r\n};\r\n\r\nexport default lockModal","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport Loading from '../Layout/Loading';\r\nimport Error from '../Layout/Error';\r\nimport lockModal from '../../helpers/lockModal'\r\n\r\n/**\r\n * re-usable delete modal component.\r\n * This can be used to delete comments, albums, posts etc from the app\r\n * props.type is the content type, eg, post, comment.\r\n * props.deleteFunction is the function passed through to delete the type\r\n * of content being deleted, typically passed from global state through it's\r\n * parent component. \r\n */\r\n\r\n\tconst DeleteModal = (props) => {\r\n\tconst {type, id, show, deleteFunction, onHide, progressFunction, isLoading, resetError, message, error} = props\r\n\tconst handleDelete = (e) => {\r\n\t\te.preventDefault();\r\n\t\tprogressFunction();\r\n\t\tdeleteFunction(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={show} onHide={isLoading ? lockModal : onHide} size=\"md\" centered>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Delete {type}</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Error error={error} reset={resetError} message={message}/>\r\n\t\t\t\t<Loading isLoading={isLoading} title={`Deleting ${type}`} />\r\n\t\t\t\t<p>Are you sure you want to delete this {type.toLowerCase()}?</p>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer className=\"d-flex justify-content-between\">\r\n\t\t\t\t<Button variant=\"danger\" onClick={handleDelete}>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"dark\" onClick={onHide} disabled={isLoading ? true: false}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\n//Simple re-usable dropdown for controlling what to do with the content.\r\n//has a delete option and edit option\r\nconst ActionsDropdown = ({type, editOnClick, deleteOnClick}) => {\r\n\treturn (\r\n\t\t<Dropdown>\r\n\t\t\t<Dropdown.Toggle variant=\"dark\" size=\"sm\">\r\n\t\t\t\tActions\r\n\t\t\t</Dropdown.Toggle>\r\n\t\t\t<Dropdown.Menu>\r\n\t\t\t\t<Dropdown.Item onClick={editOnClick}>Edit {type}</Dropdown.Item>\r\n\t\t\t\t<Dropdown.Item onClick={deleteOnClick}>Delete {type}</Dropdown.Item>\r\n\t\t\t</Dropdown.Menu>\r\n\t\t</Dropdown>\r\n\t);\r\n};\r\n\r\nexport default ActionsDropdown;\r\n","import React, { useContext } from 'react';\r\nimport { PostsActions, PostsContext } from '../../actions/posts.context';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport useInput from '../../hooks/useInput';\r\nimport Loading from '../Layout/Loading';\r\nimport Error from '../Layout/Error';\r\nimport lockModal from '../../helpers/lockModal';\r\n\r\nconst EditPost = (props) => {\r\n\tconst { title, body, onHide, id } = props;\r\n\t//state and actions from context\r\n\tconst { editPost, postActionProgress, resetError } = useContext(PostsActions);\r\n\tconst { inProgress, postsMsg, postsError } = useContext(PostsContext);\r\n\t//input hook for controlling form input\r\n\tconst [ post, handleChange ] = useInput({ title, body });\r\n\r\n\t//set inprogress boolean to true, whilst request\r\n\t//in action. if error, show error message, else\r\n\t//edit post\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tpostActionProgress();\r\n\t\teditPost(post, id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={props.show} onHide={inProgress ? lockModal : onHide} size=\"lg\" centered>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit Post \"{title}\"</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Error reset={resetError} error={postsError} message={postsMsg} />\r\n\t\t\t\t<Loading isLoading={inProgress} title=\"Editing Post\" />\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"title\">Title</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" value={post.title} onChange={handleChange} required />\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"body\">Post</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" name=\"body\" value={post.body} onChange={handleChange} required />\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant=\"dark\" type=\"submit\">\r\n\t\t\t\t\t\tSave Edit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"dark\" type=\"button\" onClick={onHide} disabled={inProgress ? true : false}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default EditPost;\r\n","import React, { useContext } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { PostsActions, PostsContext } from '../../actions/posts.context';\r\nimport useToggle from '../../hooks/useToggle';\r\nimport CardContainer from '../Layout/CardContainer';\r\nimport DeleteModal from '../Modals/DeleteModal';\r\n// import EditModal from '../Modals/EditPostModal';\r\nimport ActionsDropdown from '../Layout/ActionsDropdown';\r\nimport styles from '../../styles/Posts/posts_card.module.scss';\r\nimport EditModal from '../Modals/EditPostModal';\r\n\r\n//shows a post as a card view. displays delete modal and edit modal\r\n//based on local state using useToggle hook.\r\nconst PostsCard = (props) => {\r\n\tconst {id, body, title} = props\r\n\t//state and actions from global state\r\n\tconst { postActionProgress, deletePost, resetError } = useContext(PostsActions);\r\n\tconst { inProgress, postsError, postsMsg } = useContext(PostsContext);\r\n\t//controls the view of edit and delete modals. They will only\r\n\t//render if the boolean(s) are true.\r\n\tconst [ deleteModal, toggleDeleteModal ] = useToggle(false);\r\n\tconst [ editModal, toggleEditModal ] = useToggle(false);\r\n\r\n\treturn (\r\n\t\t<CardContainer>\r\n\t\t\t<div>\r\n\t\t\t\t<h4 className={styles.posts_card__title}>{title}</h4>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<p className={styles.posts_card__body}>{body}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.posts_card__controls}>\r\n\t\t\t\t<Link to={`/posts/${id}`}>\r\n\t\t\t\t\t<Button variant=\"outline-dark\" size=\"sm\">\r\n\t\t\t\t\t\t<i className=\"fas fa-comments\" /> Comments\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ActionsDropdown editOnClick={toggleEditModal} deleteOnClick={toggleDeleteModal} type=\"Post\" />\r\n\t\t\t</div>\r\n\t\t\t{deleteModal && (\r\n\t\t\t\t<DeleteModal\r\n\t\t\t\t\ttype=\"Post\"\r\n\t\t\t\t\tshow={deleteModal}\r\n\t\t\t\t\tonHide={toggleDeleteModal}\r\n\t\t\t\t\tprogressFunction={postActionProgress}\r\n\t\t\t\t\tinProgress={inProgress}\r\n\t\t\t\t\tdeleteFunction={deletePost}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tisLoading={inProgress}\r\n\t\t\t\t\terror={postsError}\r\n\t\t\t\t\tresetError={resetError}\r\n\t\t\t\t\tmessage={postsMsg}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{editModal && (\r\n\t\t\t\t<EditModal\r\n\t\t\t\t\tshow={editModal}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tonHide={toggleEditModal}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tbody={body}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</CardContainer>\r\n\t);\r\n};\r\n\r\nexport default PostsCard;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { PostsContext, PostsActions } from '../../actions/posts.context';\r\nimport PostsCard from './PostsCard';\r\nimport GridContainer from '../Layout/GridContainer';\r\nimport Loading from '../Layout/Loading';\r\n\r\nconst Posts = (props) => {\r\n\t//get actions and state from context\r\n\tconst { getUserPosts, clearUserPosts } = useContext(PostsActions);\r\n\tconst { userPosts, loading } = useContext(PostsContext);\r\n\r\n\t//get users posts. on dismount, clear loading and error message\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tgetUserPosts(props.id);\r\n\t\t\treturn () => {\r\n\t\t\t\tclearUserPosts();\r\n\t\t\t};\r\n\t\t},\r\n\t\t[getUserPosts, clearUserPosts, props.id]\r\n\t);\r\n\t\r\n\t//displays a card view using \"PostsCard\" for each users post.\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Loading isLoading={loading} title=\"Loading Users Posts\" />\r\n\t\t\t<GridContainer>\r\n\t\t\t\t{userPosts.map((post) => (\r\n\t\t\t\t\t<PostsCard key={post.id} id={post.id} title={post.title} body={post.body} />\r\n\t\t\t\t))}\r\n\t\t\t</GridContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { UsersActions, UsersContext } from '../actions/users.context';\r\nimport Header from '../components/Layout/Header';\r\nimport Posts from '../components/Posts/Posts';\r\n\r\n//renders Posts component displaying a list of users posts\r\nconst UserPosts = (props) => {\r\n\tconst {id} = props.match.params;\r\n\t//grabs global state and actions\r\n\tconst { getCurrentUser, clearUser } = useContext(UsersActions);\r\n\tconst { currentUsername, loadingUser } = useContext(UsersContext);\r\n\t\r\n\t//gets currently viewed user's username to display in Header component\r\n\t//resets loading and user message state on dismount \r\n\tuseEffect(() => {\r\n\t\tgetCurrentUser(id)\r\n\t\treturn () => {\r\n\t\t\tclearUser()\r\n\t\t}\r\n\t},[getCurrentUser, id, clearUser]);\r\n\r\n\t//if current username does not exist, send a message saying user not found\r\n\t//else show the users username\r\n\tconst user = () => {\r\n\t\tif(!currentUsername && !loadingUser) {\r\n\t\t\treturn <Header title=\"Username not found!\"/>\r\n\t\t} else {\r\n\t\t\treturn <Header title={loadingUser ? `Loading username...` : `See what ${currentUsername} has posted`} />\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{user()}\r\n\t\t\t<Posts id={id}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UserPosts;\r\n","import React from 'react';\r\nimport styles from '../../styles/Layout/centered_div.module.scss';\r\n\r\n//very simple layout components with some css flex options set all child elements\r\n//in the center of the page listed as a column\r\nconst CenteredDiv = (props) => {\r\n    return (\r\n        <div className={styles.centered_div}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CenteredDiv;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { PostsActions, PostsContext } from '../../actions/posts.context';\r\nimport Loading from '../Layout/Loading';\r\nimport Error from '../Layout/Error';\r\nimport styles from '../../styles/Posts/post_content.module.scss';\r\n\r\n/**\r\n * simple component for displaying the content of a post.\r\n * pulls what is needed from global state using the useContext hook\r\n * @getPost uses the props.id as param and gets the post content\r\n * @postLoading initially set to true in global state, however\r\n * once @getPost has finished, it will change @postLoading state\r\n * to false. @clearPost will then set @postLoading to true on dismount\r\n */\r\n\r\nconst PostContent = (props) => {\r\n\tconst { id } = props;\r\n\tconst { getPost, clearPost, resetError } = useContext(PostsActions);\r\n\tconst { post, loading, postsError, postsMsg } = useContext(PostsContext);\r\n\r\n\t//get post. on dismount, reset loading and error message\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tgetPost(id);\r\n\t\t\treturn () => {\r\n\t\t\t\tclearPost();\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ getPost, clearPost, id ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Error reset={resetError} error={postsError} message={postsMsg} />\r\n\t\t\t<Loading isLoading={loading} title=\"Loading Post\" />\r\n\t\t\t<div className={styles.post_content}>\r\n\t\t\t\t<h4 className={styles.post_content__title}>{post.title}</h4>\r\n\t\t\t\t<p className={styles.post_content__body}>{post.body}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostContent;\r\n","import {\r\n\tGET_COMMENTS,\r\n\tGET_COMMENTS_FAILED,\r\n\tEDIT_COMMENT,\r\n\tEDIT_COMMENT_FAILED,\r\n\tDELETE_COMMENT,\r\n\tDELETE_COMMENT_FAILED,\r\n\tADD_COMMENT,\r\n\tADD_COMMENT_FAILED,\r\n    CLEAR_COMMENTS,\r\n\tACTION_PROGRESS,\r\n\tRESET_ERROR\r\n} from '../actions/types/types';\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_COMMENTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcomments: action.payload,\r\n\t\t\t\tcommentsMsg: \"\",\r\n\t\t\t\tcommentsError: false\r\n\t\t\t};\r\n\r\n\t\tcase GET_COMMENTS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcomments: [],\r\n\t\t\t\tcommentsMsg: \"Something went wrong getting the comments\",\r\n\t\t\t\tcommentsError: true\r\n\t\t\t};\r\n\r\n\t\tcase ADD_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: [ ...state.comments, action.payload ],\r\n\t\t\t\tcommentsMsg: \"Comment added\",\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tcommentsError: false\r\n\t\t\t};\r\n\r\n\t\tcase ADD_COMMENT_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                inProgress: false,\r\n\t\t\t\tcommentsMsg: \"Error ocurred adding the comment\",\r\n\t\t\t\tcommentsError: true\r\n\t\t\t};\r\n\r\n\t\tcase EDIT_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: state.comments.map((comment) => (comment.id === action.payload.id ? action.payload : comment)),\r\n\t\t\t\tcommentsMsg: \"Comment successfully edited\",\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tcommentsError: false\r\n\t\t\t};\r\n\r\n\t\tcase EDIT_COMMENT_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                commentsMsg: \"Error ocurred updating the comment\",\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tcommentsError: true\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: state.comments.filter((comment) => comment.id !== action.payload),\r\n\t\t\t\tcommentsMsg: \"Deleted comment\",\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tcommentsError: false\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_COMMENT_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommentsMsg: \"Error deleting comment\",\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tcommentsError: true\r\n\t\t\t}\r\n\r\n\t\tcase CLEAR_COMMENTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                loading: true,\r\n\t\t\t\tinProgress: false,\r\n\t\t\t\tcommentsMsg: null,\r\n\t\t\t\tcommentsError: false,\r\n\t\t\t\tcomments: []\r\n\t\t\t};\r\n\r\n\t\tcase RESET_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommentsError: false\r\n\t\t\t}\r\n\r\n\t\tcase ACTION_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinProgress: true\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext, useReducer, useCallback } from 'react';\r\nimport {\r\n\tGET_COMMENTS,\r\n\tGET_COMMENTS_FAILED,\r\n\tEDIT_COMMENT,\r\n\tEDIT_COMMENT_FAILED,\r\n\tDELETE_COMMENT,\r\n\tDELETE_COMMENT_FAILED,\r\n\tADD_COMMENT,\r\n\tADD_COMMENT_FAILED,\r\n\tCLEAR_COMMENTS,\r\n\tACTION_PROGRESS,\r\n\tRESET_ERROR\r\n} from './types/types';\r\nimport { BASE_API_URL } from './variables/api';\r\nimport axios from 'axios';\r\nimport commentsReducer from '../reducers/commentsReducer';\r\n\r\n//create a new context for state and actions\r\nexport const CommentsContext = createContext();\r\nexport const CommentsActions = createContext();\r\n\r\nexport const CommentsProvider = (props) => {\r\n\t//set initial state\r\n\tconst initialState = {\r\n\t\tcomments: [],\r\n\t\tloading: true,\r\n\t\tCommentsMsg: null,\r\n\t\tinProgress: false,\r\n\t\tcommentsError: false,\r\n\t};\r\n\r\n\t//userReducer hook to use with imported comments reducer and initial state\r\n\tconst [ state, dispatch ] = useReducer(commentsReducer, initialState);\r\n\r\n\t//actions functions\r\n\r\n\t//get comments for a post\r\n\tconst getComments = useCallback(async(postID) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(`${BASE_API_URL}posts/${postID}/comments`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_COMMENTS,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_COMMENTS_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t},[])\r\n\r\n\t//add a comment\r\n\tconst addComment = async (comment) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.post(`${BASE_API_URL}comments/`, comment);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_COMMENT,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_COMMENT_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//edit a comment\r\n\tconst editComment = async (comment, commentID) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.put(`${BASE_API_URL}comments/${commentID}`, comment);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_COMMENT,\r\n\t\t\t\tpayload: result.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_COMMENT_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//delete a comment\r\n\tconst deleteComment = async (commentID) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`${BASE_API_URL}comments/${commentID}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_COMMENT,\r\n\t\t\t\tpayload: commentID\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_COMMENT_FAILED\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//resets comments state, such as loading, inProgress\r\n\tconst clearComments = useCallback(() => {\r\n\t\tdispatch({ type: CLEAR_COMMENTS });\r\n\t},[])\r\n\r\n\t//sets inProgress to true. used when adding, deleting and editing a comment\r\n\t//this could also just be a piece of the local state in components but I opted\r\n\t//to keep all actions in one place\r\n\tconst commentActionProgress = () => dispatch({ type: ACTION_PROGRESS });\r\n\r\n\tconst resetError = useCallback(() => {\r\n\t\tdispatch({type: RESET_ERROR})\r\n\t},[])\r\n\r\n\t//add actions functions to be used in value in Actions Provider\r\n\tconst actions = {\r\n\t\tgetComments,\r\n\t\taddComment,\r\n\t\teditComment,\r\n\t\tdeleteComment,\r\n\t\tclearComments,\r\n\t\tcommentActionProgress,\r\n\t\tresetError\r\n\t};\r\n\r\n\t//return providers\r\n\treturn (\r\n\t\t<CommentsContext.Provider value={state}>\r\n\t\t\t<CommentsActions.Provider value={actions}>{props.children}</CommentsActions.Provider>\r\n\t\t</CommentsContext.Provider>\r\n\t);\r\n};\r\n","import React, {useContext} from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport {CommentsActions, CommentsContext} from '../../actions/comments.context';\r\nimport useInput from '../../hooks/useInput'\r\nimport Loading from '../Layout/Loading';\r\nimport Error from '../Layout/Error';\r\nimport lockModal from '../../helpers/lockModal';\r\n\r\nconst EditComment = (props) => {\r\n\tconst {name, body, id, onHide, email} = props;\r\n\t//grab state from context\r\n\tconst {editComment, commentActionProgress, resetError} = useContext(CommentsActions);\r\n\tconst {inProgress, commentsMsg, commentsError} = useContext(CommentsContext);\r\n\t//use inputhook for form\r\n\tconst [comment, handleChange] = useInput({name, body, email});\r\n\r\n\t//set inprogress boolean to true. edit comment,\r\n\t//else if error, show error message\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcommentActionProgress();\r\n\t\teditComment(comment, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal show={props.show} onHide={inProgress ? lockModal : props.onHide} size=\"lg\" centered>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit Comment \"{name}\"</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Error reset={resetError} error={commentsError} message={commentsMsg}/>\r\n\t\t\t\t<Loading isLoading={inProgress} title=\"Editing Comment\"/>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"name\">Comment Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" name=\"name\" value={comment.name || \"\"} onChange={handleChange} required/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"body\">Comment</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" name=\"body\" value={comment.body || \"\"} onChange={handleChange} required/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"email\">Email</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" value={comment.email || \"\"} onChange={handleChange} required/>\r\n\t\t\t\t\t</Form.Group>\r\n                    <Button variant=\"dark\" type=\"submit\">Save Edit</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"dark\" type=\"button\" onClick={onHide} disabled={inProgress ? true : false}>Close</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default EditComment;","import React, { useContext } from 'react';\r\nimport { CommentsActions, CommentsContext } from '../../actions/comments.context';\r\nimport useToggle from '../../hooks/useToggle';\r\nimport EditComment from '../Modals/EditComment';\r\nimport DeleteComment from '../Modals/DeleteModal';\r\nimport ActionsDropdown from '../Layout/ActionsDropdown';\r\nimport styles from '../../styles/Comments/comment.module.scss';\r\n\r\n/**\r\n * this component displays a comments data,\r\n * and opens two modals for editing and deleting a comment\r\n * They will only render if the boolean state is true, which is set at\r\n * the bottom of the return value. Without conditionally rendering them,\r\n * then the modals for every comment component would render on mount.\r\n */\r\n\r\nconst Comment = (props) => {\r\n\tconst {name, email, body, id} = props;\r\n\tconst [ editModal, toggleEditModal ] = useToggle(false);\r\n\tconst [ deleteModal, toggleDeleteModal ] = useToggle(false);\r\n\tconst { deleteComment, commentActionProgress, resetError } = useContext(CommentsActions);\r\n\tconst { inProgress, commentsError, commentsMsg } = useContext(CommentsContext);\r\n\r\n\treturn (\r\n\t\t<div className={styles.comment}>\r\n\t\t\t<p className={styles.comment__email}>{email}</p>\r\n\t\t\t<p className={styles.comment__name}>{name}</p>\r\n\t\t\t<p className={styles.comment__body}>{body}</p>\r\n\t\t\t<div className={styles.comment__controls}>\r\n\t\t\t\t<ActionsDropdown editOnClick={toggleEditModal} deleteOnClick={toggleDeleteModal} type=\"Comment\" />\r\n\t\t\t</div>\r\n\t\t\t{deleteModal && (\r\n\t\t\t\t<DeleteComment\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\ttype=\"Comment\"\r\n\t\t\t\t\tdeleteFunction={deleteComment}\r\n\t\t\t\t\tshow={deleteModal}\r\n\t\t\t\t\tonHide={toggleDeleteModal}\r\n\t\t\t\t\tprogressFunction={commentActionProgress}\r\n\t\t\t\t\tisLoading={inProgress}\r\n\t\t\t\t\tresetError={resetError}\r\n\t\t\t\t\tmessage={commentsMsg}\r\n\t\t\t\t\terror={commentsError}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{editModal && (\r\n\t\t\t\t<EditComment\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tbody={body}\r\n\t\t\t\t\temail={email}\r\n\t\t\t\t\tshow={editModal}\r\n\t\t\t\t\tonHide={toggleEditModal}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useContext } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { CommentsActions, CommentsContext } from '../../actions/comments.context';\r\nimport useInput from '../../hooks/useInput';\r\nimport Loading from '../Layout/Loading';\r\nimport Error from '../Layout/Error';\r\nimport lockModal from '../../helpers/lockModal'\r\n\r\n//modal for adding a comment.\r\nconst AddComment = (props) => {\r\n\tconst {onHide, show} = props;\r\n\t//grab state and actions from context\r\n\tconst { addComment, commentActionProgress, resetError } = useContext(CommentsActions);\r\n\tconst { inProgress, commentsError, commentsMsg } = useContext(CommentsContext);\r\n\t//use input hook for form input\r\n\tconst [ newComment, handleChange ] = useInput('');\r\n\r\n\t//set inprogress boolean to true whilst request \r\n\t//is in action. add comment if promise resolved,\r\n\t//show error if promise rejected\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tcommentActionProgress();\r\n\t\taddComment(newComment);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={show} onHide={inProgress ? lockModal : onHide} size=\"lg\" centered>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Add Comment</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Error reset={resetError} error={commentsError} message={commentsMsg} />\r\n\t\t\t\t<Loading isLoading={inProgress} title=\"Adding Comment\" />\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"name\">Comment Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tvalue={newComment.name || ''}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tplaceholder=\"Comment Name\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"Comment\">Comment</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\t\t\tvalue={newComment.body || ''}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tplaceholder=\"Comment\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label htmlFor=\"Email\">Email</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tvalue={newComment.email || ''}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant=\"success\" type=\"submit\">\r\n\t\t\t\t\t\tAdd Comment\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"dark\" type=\"button\" onClick={onHide} disabled={inProgress ? true : false}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default AddComment;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { CommentsActions, CommentsContext } from '../../actions/comments.context';\r\nimport {PostsContext} from '../../actions/posts.context';\r\nimport CommentCard from '../Comments/CommentCard';\r\nimport useToggle from '../../hooks/useToggle';\r\nimport Loading from '../Layout/Loading';\r\nimport AddComment from '../Modals/AddCommentModal';\r\nimport styles from '../../styles/Comments/comments.module.scss';\r\n\r\n/**\r\n * component for fetching all comments for a post.\r\n * firstly gets what needed from globalstate using the context hook\r\n * gets comments with @getComments using props.id as the param based from\r\n * the parent component. @loading is set to true in global state,\r\n * once the async function @getComments has done finished, it will set\r\n * @loading to false whether to request failed or succeeded.\r\n * @clearComments will remove the comments from global state and reset \r\n * @loading to true again.\r\n */\r\n\r\nconst Comments = (props) => {\r\n\tconst { id } = props;\r\n\t//grab whats's needed from global state\r\n\tconst { getComments, clearComments } = useContext(CommentsActions);\r\n\tconst { comments, loading } = useContext(CommentsContext);\r\n\t//use postsError here for the \"add comment button\". If there is an error with the post, disable the button\r\n\tconst {postsError} = useContext(PostsContext);\r\n\tconst [ addModal, toggleAddModal ] = useToggle(false);\r\n\r\n\t//get comments. on unmount, reset loading and comments message\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tgetComments(id);\r\n\t\t\treturn () => {\r\n\t\t\t\tclearComments();\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ getComments, clearComments, id ]\r\n\t);\r\n\t\r\n\t//loading and error components to manage state. These could potentially\r\n\t//be merged together into an all in once higher order component,\r\n\t//however, I feel this is sufficient enough for the app. A HOC to manage\r\n\t//these may work better with something like Redux\r\n\treturn (\r\n\t\t<div className={styles.comments}>\r\n\t\t\t<Loading isLoading={loading} title=\"Loading Comments\" />\r\n\t\t\t<p className={styles.comments__header}>{comments.length} Comments</p>\r\n\t\t\t{comments.map((comment) => (\r\n\t\t\t\t<CommentCard\r\n\t\t\t\t\tkey={comment.id}\r\n\t\t\t\t\tid={comment.id}\r\n\t\t\t\t\tname={comment.name}\r\n\t\t\t\t\temail={comment.email}\r\n\t\t\t\t\tbody={comment.body}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t<Button className=\"mt-3\" variant=\"success\" onClick={toggleAddModal} disabled={postsError || loading ? true : false}>\r\n\t\t\t\tAdd Comment\r\n\t\t\t</Button>\r\n\t\t\t{addModal && <AddComment show={addModal} onHide={toggleAddModal} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport CenteredDiv from '../components/Layout/CenteredDiv';\r\nimport PostContent from '../components/Posts/PostContent';\r\nimport Comments from '../components/Comments/Comments';\r\nimport CardContainer from '../components/Layout/CardContainer';\r\n\r\n//renders PostContent and Comments component for a post\r\nconst Post = (props) => {\r\n\tconst {id} = props.match.params\r\n\treturn (\r\n\t\t<CenteredDiv>\r\n\t\t\t<CardContainer>\r\n\t\t\t\t<PostContent id={id} />\r\n\t\t\t\t<Comments id={id} />\r\n\t\t\t</CardContainer>\r\n\t\t</CenteredDiv>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Container, Card, Accordion, Button, Form, Col } from 'react-bootstrap';\r\nimport CardContainer from '../Layout/CardContainer';\r\n\r\n//dummy user account settings component. None of this\r\n//is actually functional, however, it would follow the same\r\n//pattern as the rest of the app, doing a put request\r\n//whether it's changing the users password or accounts settings\r\nconst UserSettings = () => {\r\n\treturn (\r\n\t\t<Container className=\"mt-4\">\r\n\t\t\t<CardContainer>\r\n\t\t\t\t<Accordion>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n\t\t\t\t\t\t\t\tChange Password\r\n\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>New Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter A New Password\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\">Change Password</Button>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n\t\t\t\t\t\t\t\tChange Account Details\r\n\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} controlId=\"email\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} controlId=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"address\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control placeholder=\"1234 Main St\" />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"address2\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Address 2</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} controlId=\"city\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>City</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control placeholder=\"City\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} controlId=\"zip\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Zip</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control placeholder=\"ZIP Code\" />\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\r\n                                    <Form.Group controlId=\"company\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Company</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control placeholder=\"Current Company\" />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\tSave Account Details\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Accordion>\r\n\t\t\t</CardContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UserSettings;\r\n","import React, { useContext } from 'react';\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\nimport { PostsActions, PostsContext } from '../../actions/posts.context';\r\nimport useInput from '../../hooks/useInput';\r\nimport Error from '../Layout/Error';\r\nimport Loading from '../Layout/Loading';\r\nimport lockModal from '../../helpers/lockModal';\r\n\r\nconst NewPost = (props) => {\r\n\t//state and action from context \r\n\tconst { addPost, resetError, postActionProgress } = useContext(PostsActions);\r\n\tconst { postsMsg, postsError, inProgress } = useContext(PostsContext);\r\n\t//use hook for controlling form input\r\n\tconst [ post, handleChange ] = useInput('');\r\n\r\n\t//set inprogress boolean to true\r\n\t//add post if resolved, else show\r\n\t//error message if error\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tpostActionProgress();\r\n\t\taddPost(post);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal show={props.show} onHide={inProgress ? lockModal : props.onHide} size=\"lg\" centered>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Add A New Post</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Error reset={resetError} error={postsError} message={postsMsg}/>\r\n\t\t\t\t<Loading isLoading={inProgress} title=\"Adding post\"/>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Label>Post Title</Form.Label>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\tvalue={post.title || ''}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n                            placeholder=\"Title\"\r\n                            required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Post</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\t\t\tvalue={post.body || ''}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n                            placeholder=\"Body\"\r\n                            required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Button type=\"submit\">Submit</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"dark\" type=\"button\" onClick={props.onHide} disabled={inProgress ? true : false}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default NewPost;\r\n","import React, { useContext } from 'react';\r\nimport Header from '../components/Layout/Header';\r\nimport { AuthContext } from '../actions/auth.context';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport Posts from '../components/Posts/Posts';\r\nimport CardContainer from '../components/Layout/CardContainer';\r\nimport UserSettings from '../components/Users/UserSettings'\r\nimport useToggle from '../hooks/useToggle';\r\nimport AddPost from '../components/Modals/AddPostModal';\r\n\r\n//here you can add a new post. It will not be saved to the database \r\n//due to the api, but will be added to the global state\r\nconst AccountSettings = () => {\r\n    const { loggedInUser } = useContext(AuthContext);\r\n    const [addPostModal, toggleAddPostModal] = useToggle(false);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header title={`Hi, ${loggedInUser}`} />\r\n            <UserSettings />\r\n\t\t\t<Container className=\"mt-4\">\r\n\t\t\t\t<CardContainer>\r\n                    <Button onClick={toggleAddPostModal}>Add A New Post</Button>\r\n\t\t\t\t\t<Posts />\r\n\t\t\t\t</CardContainer>\r\n\t\t\t</Container>\r\n            {addPostModal && <AddPost show={addPostModal} onHide={toggleAddPostModal}/> }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AccountSettings;\r\n","import React from 'react';\r\nimport {Container, Jumbotron} from 'react-bootstrap';\r\n\r\n//short error page using some bootstrap classes and inline classes\r\nconst ErrorPage = () => {\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Jumbotron className=\"d-flex justify-content-center flex-column align-items-center\">\r\n                <h1 className=\"p-4\" style={{\"fontSize\": \"32px\"}}>Error - 404</h1>\r\n                <p>Page Not Found</p>\r\n            </Jumbotron>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, {useEffect, useContext} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport PrivateRoute from '../HOC/PrivateRoute';\r\n\r\nimport {AuthActions} from '../actions/auth.context';\r\n\r\nimport Homepage from '../pages/Homepage';\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport UserPosts from '../pages/UserPosts';\r\nimport Post from '../pages/Post';\r\nimport AccountSettings from '../pages/AccountSettings';\r\nimport ErrorPage from '../pages/ErrorPage';\r\n\r\n\r\nconst Routes = () => {\r\n\tconst {checkAuth} = useContext(AuthActions);\r\n\t\r\n\t//checks if user authenticated on mount. Would hypothetically\r\n\t//log out user if web token is invalid, or use refresh token\r\n    useEffect(() => {\r\n\t\tcheckAuth();\r\n    },[checkAuth])\r\n\r\n\t//displays a list of app routes. added errorpage if route is not a match\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\" component={Homepage} />\r\n\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t<Route exact path=\"/register\" component={Register} />\r\n\t\t\t<PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n\t\t\t<PrivateRoute exact path=\"/users/:id/posts\" component={UserPosts} />\r\n\t\t\t<PrivateRoute exact path=\"/users/myaccount\" component={AccountSettings} />\r\n\t\t\t<Route component={ErrorPage}/>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default Routes;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n\tconst { pathname } = useLocation();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t},\r\n\t\t[ pathname ]\r\n\t);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/reset.css';\n\nimport NavigationBar from './components/Nav/NavigationBar';\nimport Routes from './routes/Routes';\n\nimport { PostsProvider } from './actions/posts.context';\nimport { UsersProvider } from './actions/users.context';\nimport { AuthProvider } from './actions/auth.context';\nimport { CommentsProvider } from './actions/comments.context';\n\nimport ScrollToTop from './helpers/ScrollToTop';\n\nfunction App(props) {\n\t/**\n   * I use the contextAPI for global state, as I find it clean to use with\n   * minimal markup. It's also very easy to setup and doesn't have to be configured\n   * in any strict way. Providers are wrapped around all\n   * other components, giving them access to global state and actions if the useContext\n   * hook is used in said components. \n   */\n\treturn (\n\t\t<PostsProvider>\n\t\t\t<UsersProvider>\n\t\t\t\t<CommentsProvider>\n\t\t\t\t\t<AuthProvider>\n\t\t\t\t\t\t<NavigationBar/>\n\t\t\t\t\t\t\t<ScrollToTop />\n\t\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</AuthProvider>\n\t\t\t\t</CommentsProvider>\n\t\t\t</UsersProvider>\n\t\t</PostsProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t\t</React.StrictMode>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_card__avatar\":\"user_card_user_card__avatar__1yGMX\",\"user_card__details\":\"user_card_user_card__details__1jv2a\",\"user_card__name\":\"user_card_user_card__name__2GGba\",\"user_card__company\":\"user_card_user_card__company__1NJKF\",\"user_card__address\":\"user_card_user_card__address__2ESnp\",\"user_card__contact\":\"user_card_user_card__contact__7zfNQ\",\"user_card__controls\":\"user_card_user_card__controls__3Wv3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"comment_comment__IE9nb\",\"comment__name\":\"comment_comment__name__Z6cdi\",\"comment__email\":\"comment_comment__email__3ODxp\",\"comment__controls\":\"comment_comment__controls__1edGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_card__title\":\"posts_card_posts_card__title__3mCkD\",\"posts_card__body\":\"posts_card_posts_card__body__1x8H2\",\"posts_card__controls\":\"posts_card_posts_card__controls__3_ncO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_content\":\"post_content_post_content__YPS-r\",\"post_content__title\":\"post_content_post_content__title__AIyuD\",\"post_content__body\":\"post_content_post_content__body__1AYon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments__header\":\"comments_comments__header__1u9iI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__7j6NH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_container\":\"grid_container_grid_container__1JCKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_container\":\"card_container_card_container__3ApSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered_div\":\"centered_div_centered_div__CZ-ir\"};"],"sourceRoot":""}